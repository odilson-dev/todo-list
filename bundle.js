(()=>{"use strict";var e={208:(e,n,t)=>{t.d(n,{A:()=>d});var o=t(354),r=t.n(o),i=t(314),a=t.n(i)()(r());a.push([e.id,"body {\n  font-family: Arial, Helvetica, sans-serif;\n  margin: 0;\n}\n/* HEADER */\nheader {\n  background-color: blueviolet;\n  padding: 15px;\n}\n.header {\n  display: flex;\n  justify-content: space-between;\n}\nheader h1 {\n  margin: 0;\n  padding: 5px;\n  color: white;\n}\n#showTodoDialog {\n  background-color: transparent;\n  color: white;\n  border: 1px solid white;\n  border-radius: 5px;\n  margin: 10px 15px;\n  transition: 500ms;\n}\n#showTodoDialog:hover {\n  background-color: white;\n  color: blueviolet;\n}\n.hide {\n  display: none;\n}\n\n/* PROJECTS */\n.project {\n  border: 1px solid black;\n  display: grid;\n  grid-template-columns: repeat(1, 1fr) repeat(2, 1fr);\n  gap: 15px;\n}\n\n.content {\n  border: 1px solid black;\n  height: 100vh;\n  display: grid;\n  grid-template-columns: repeat(1, 1fr) repeat(1, 3fr);\n}\n\n.projects {\n  border: 1px solid coral;\n}\n\n.todos {\n  border: 1px solid gold;\n  padding: 30px;\n}\n.projects-header {\n  display: flex;\n  justify-content: space-between;\n}\n#showDialog {\n  margin: 20px;\n}\n\n/* TODO ITEM */\n.todo {\n  display: grid;\n  grid-template-columns: repeat(1, 30px) repeat(1, 3fr) repeat(1, 1fr);\n  background-color: aliceblue;\n}\n.todo-text-content h2,\np {\n  margin: 3px;\n}\n.checkbox,\n.buttons {\n  display: flex;\n  justify-content: space-evenly;\n}\n.checkbox input,\n.buttons > * {\n  align-self: center;\n}\n.checkbox input {\n  margin: auto;\n}\n.description {\n  font-size: large;\n}\nh2 {\n  color: rgb(43, 43, 43);\n}\np {\n  font-size: small;\n  color: rgb(91, 91, 91);\n}\n\n/* EDIT AND DELETE BUTTONS */\n.delete-btn,\n.edit-btn {\n  background-color: transparent;\n  color: red;\n  border: 2px solid red;\n  padding: 5px 10px 5px 10px;\n  border-radius: 5px;\n  transition: 500ms;\n}\n.delete-btn:hover {\n  background-color: red;\n  color: white;\n  cursor: pointer;\n}\n.edit-btn {\n  color: orange;\n  border: 2px solid orange;\n}\n\n.edit-btn:hover {\n  background-color: orange;\n  color: white;\n  cursor: pointer;\n}\n\n.green-border {\n  border-bottom: 5px solid green;\n}\n.orange-border {\n  border-bottom: 5px solid orange;\n}\n\n.red-border {\n  border-bottom: 5px solid red;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,yCAAyC;EACzC,SAAS;AACX;AACA,WAAW;AACX;EACE,4BAA4B;EAC5B,aAAa;AACf;AACA;EACE,aAAa;EACb,8BAA8B;AAChC;AACA;EACE,SAAS;EACT,YAAY;EACZ,YAAY;AACd;AACA;EACE,6BAA6B;EAC7B,YAAY;EACZ,uBAAuB;EACvB,kBAAkB;EAClB,iBAAiB;EACjB,iBAAiB;AACnB;AACA;EACE,uBAAuB;EACvB,iBAAiB;AACnB;AACA;EACE,aAAa;AACf;;AAEA,aAAa;AACb;EACE,uBAAuB;EACvB,aAAa;EACb,oDAAoD;EACpD,SAAS;AACX;;AAEA;EACE,uBAAuB;EACvB,aAAa;EACb,aAAa;EACb,oDAAoD;AACtD;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,sBAAsB;EACtB,aAAa;AACf;AACA;EACE,aAAa;EACb,8BAA8B;AAChC;AACA;EACE,YAAY;AACd;;AAEA,cAAc;AACd;EACE,aAAa;EACb,oEAAoE;EACpE,2BAA2B;AAC7B;AACA;;EAEE,WAAW;AACb;AACA;;EAEE,aAAa;EACb,6BAA6B;AAC/B;AACA;;EAEE,kBAAkB;AACpB;AACA;EACE,YAAY;AACd;AACA;EACE,gBAAgB;AAClB;AACA;EACE,sBAAsB;AACxB;AACA;EACE,gBAAgB;EAChB,sBAAsB;AACxB;;AAEA,4BAA4B;AAC5B;;EAEE,6BAA6B;EAC7B,UAAU;EACV,qBAAqB;EACrB,0BAA0B;EAC1B,kBAAkB;EAClB,iBAAiB;AACnB;AACA;EACE,qBAAqB;EACrB,YAAY;EACZ,eAAe;AACjB;AACA;EACE,aAAa;EACb,wBAAwB;AAC1B;;AAEA;EACE,wBAAwB;EACxB,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,8BAA8B;AAChC;AACA;EACE,+BAA+B;AACjC;;AAEA;EACE,4BAA4B;AAC9B",sourcesContent:["body {\n  font-family: Arial, Helvetica, sans-serif;\n  margin: 0;\n}\n/* HEADER */\nheader {\n  background-color: blueviolet;\n  padding: 15px;\n}\n.header {\n  display: flex;\n  justify-content: space-between;\n}\nheader h1 {\n  margin: 0;\n  padding: 5px;\n  color: white;\n}\n#showTodoDialog {\n  background-color: transparent;\n  color: white;\n  border: 1px solid white;\n  border-radius: 5px;\n  margin: 10px 15px;\n  transition: 500ms;\n}\n#showTodoDialog:hover {\n  background-color: white;\n  color: blueviolet;\n}\n.hide {\n  display: none;\n}\n\n/* PROJECTS */\n.project {\n  border: 1px solid black;\n  display: grid;\n  grid-template-columns: repeat(1, 1fr) repeat(2, 1fr);\n  gap: 15px;\n}\n\n.content {\n  border: 1px solid black;\n  height: 100vh;\n  display: grid;\n  grid-template-columns: repeat(1, 1fr) repeat(1, 3fr);\n}\n\n.projects {\n  border: 1px solid coral;\n}\n\n.todos {\n  border: 1px solid gold;\n  padding: 30px;\n}\n.projects-header {\n  display: flex;\n  justify-content: space-between;\n}\n#showDialog {\n  margin: 20px;\n}\n\n/* TODO ITEM */\n.todo {\n  display: grid;\n  grid-template-columns: repeat(1, 30px) repeat(1, 3fr) repeat(1, 1fr);\n  background-color: aliceblue;\n}\n.todo-text-content h2,\np {\n  margin: 3px;\n}\n.checkbox,\n.buttons {\n  display: flex;\n  justify-content: space-evenly;\n}\n.checkbox input,\n.buttons > * {\n  align-self: center;\n}\n.checkbox input {\n  margin: auto;\n}\n.description {\n  font-size: large;\n}\nh2 {\n  color: rgb(43, 43, 43);\n}\np {\n  font-size: small;\n  color: rgb(91, 91, 91);\n}\n\n/* EDIT AND DELETE BUTTONS */\n.delete-btn,\n.edit-btn {\n  background-color: transparent;\n  color: red;\n  border: 2px solid red;\n  padding: 5px 10px 5px 10px;\n  border-radius: 5px;\n  transition: 500ms;\n}\n.delete-btn:hover {\n  background-color: red;\n  color: white;\n  cursor: pointer;\n}\n.edit-btn {\n  color: orange;\n  border: 2px solid orange;\n}\n\n.edit-btn:hover {\n  background-color: orange;\n  color: white;\n  cursor: pointer;\n}\n\n.green-border {\n  border-bottom: 5px solid green;\n}\n.orange-border {\n  border-bottom: 5px solid orange;\n}\n\n.red-border {\n  border-bottom: 5px solid red;\n}\n"],sourceRoot:""}]);const d=a},314:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(a[c]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);o&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),n.push(l))}},n}},354:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},72:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var i={},a=[],d=0;d<e.length;d++){var c=e[d],s=o.base?c[0]+o.base:c[0],l=i[s]||0,A="".concat(s," ").concat(l);i[s]=l+1;var p=t(A),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var E=r(u,o);o.byIndex=d,n.splice(d,0,{identifier:A,updater:E,references:1})}a.push(A)}return a}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var d=t(i[a]);n[d].references--}for(var c=o(e,r),s=0;s<i.length;s++){var l=t(i[s]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}i=c}}},659:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var i=n[o]={id:o,exports:{}};return e[o](i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{const e=function(e,t){const o=document.querySelector(".todos"),r=document.createElement("div");switch(r.classList.add("todo"),e.priority.toLowerCase()){case"hight":r.classList.add("red-border");break;case"medium":r.classList.add("orange-border");break;case"low":r.classList.add("green-border")}const i=document.createElement("div");i.classList.add("checkbox");const a=document.createElement("input");a.type="checkbox",i.appendChild(a),r.appendChild(i);const d=document.createElement("div");d.classList.add("todo-text-content");const c=document.createElement("h2");c.textContent=e.title,d.appendChild(c);const s=document.createElement("p");s.textContent=e.description,d.appendChild(s);const l=document.createElement("p");l.textContent=`Due date: ${e.dueDate}`,d.appendChild(l);const A=document.createElement("p");A.textContent=`Priority: ${e.priority}`,d.appendChild(A);const p=document.createElement("p");p.textContent=`Note: ${e.note}`,d.appendChild(p),r.appendChild(d);const u=document.createElement("div");u.classList.add("buttons");const E=document.createElement("button");E.textContent="Edit",E.classList.add("edit-btn"),E.addEventListener("click",(()=>{!function(e,t){const o=document.getElementById("editTodoDialog"),r=o.querySelectorAll(".input"),i=o.querySelector("#confirmBtn");o.querySelector('input[name="title"]').value=e.title,o.querySelector('input[name="description"]').value=e.description,o.querySelector('input[name="due_date"]').value=e.dueDate;const a=o.querySelectorAll('input[name="priority"]');for(const n of a)n.value===e.priority.toLowerCase()&&(n.checked=!0);o.querySelector('textarea[name="note"]').value=e.note,o.showModal(),o.addEventListener("close",(r=>{let i;"cancel"!=o.returnValue&&(i=o.returnValue.split(", ").reduce(((e,n)=>{const[t,o]=n.split(": ");return e[t.trim()]=isNaN(o)?o:parseInt(o),e}),{}),console.log(e),e.title=i.title,e.description=i.description,e.dueDate=i.due_date,e.priority=i.priority,e.note=i.note,n(t))})),i.addEventListener("click",(e=>{e.preventDefault();let n=[];for(const e of r){if("radio"==e.type){if(!e.checked)continue;n.push(`${e.name}: ${e.value}`)}n.push(`${e.name}: ${e.value}`)}o.close(n.join(", "))}))}(e,t)})),u.appendChild(E);const h=document.createElement("button");h.id=e.id,h.textContent="Delete",h.classList.add("delete-btn"),h.addEventListener("click",(()=>{t.todoList=t.todoList.filter((e=>e.id!=h.id)),n(t)})),u.appendChild(h),r.appendChild(u),o.appendChild(r)},n=function(n){document.querySelector(".todos").textContent="";for(const t of n.todoList)e(t,n)},o=function(e){const n=document.querySelector("output");n.textContent="";for(const t of e)r(t,n)};function r(e,t){const r=document.createElement("div");r.classList.add("project"),r.addEventListener("click",(()=>{n(e)})),r.innerHTML=`<h2>${e.name}</h2>`;const i=document.createElement("button");i.textContent="Edit",i.addEventListener("click",(()=>{!function(e,n){const t=document.getElementById("editDialog"),o=t.querySelector("#edit-project"),r=t.querySelector("#confirmBtnEdit");o.value=e.name,t.showModal(),o.addEventListener("change",(()=>{r.value=o.value})),t.addEventListener("close",(()=>{"cancel"!=t.returnValue&&(e.name=t.returnValue,n.querySelector("h3").textContent=t.returnValue,console.log(e.name))})),r.addEventListener("click",(e=>{e.preventDefault(),t.close(o.value)}))}(e,r)})),r.appendChild(i);const d=document.createElement("button");d.textContent="Delete",d.id=e.id,d.classList.add("delete-btn"),d.addEventListener("click",(()=>{const e=document.querySelector("#showTodoDialog");a=a.filter((e=>e.id!=d.id)),0==a.length&&e.classList.add("hide"),o(a)})),r.appendChild(d),t.appendChild(r)}class i{static idCounter=0;constructor(e){this.name=e,this.id=++i.idCounter,this.todoList=[{id:1,title:"Todo",description:"This is a description",dueDate:"2024-03-04",priority:"Hight",note:"This is a small note for the todo"},{id:2,title:"Todo",description:"This is a description",dueDate:"2024-03-04",priority:"Hight",note:"This is a small note for the todo"},{id:3,title:"Todo",description:"This is a description",dueDate:"2024-03-04",priority:"Hight",note:"This is a small note for the todo"}]}}let a=[];const d=document.querySelector("#showTodoDialog");var c=t(72),s=t.n(c),l=t(825),A=t.n(l),p=t(659),u=t.n(p),E=t(56),h=t.n(E),C=t(540),m=t.n(C),f=t(113),b=t.n(f),g=t(208),v={};v.styleTagTransform=b(),v.setAttributes=h(),v.insert=u().bind(null,"head"),v.domAPI=A(),v.insertStyleElement=m(),s()(g.A,v),g.A&&g.A.locals&&g.A.locals;class B{static todoID=0;constructor(e,n,t,o,r,i){this.id=++B.todoID,this.title=e,this.description=n,this.dueDate=t,this.priority=o,this.note=r,this.projectID=i}}!function(){const e=document.getElementById("showDialog"),n=document.getElementById("favDialog"),t=n.querySelector("#new-project"),r=n.querySelector("#confirmBtn");0==a.length&&d.classList.add("hide"),e.addEventListener("click",(()=>{n.showModal()})),t.addEventListener("change",(e=>{r.value=t.value})),n.addEventListener("close",(e=>{!function(e){const n=new i(e);a.push(n),o(a),1==a.length&&d.classList.remove("hide")}(n.returnValue)})),r.addEventListener("click",(e=>{e.preventDefault(),n.close(t.value)}))}(),function(){const e=document.querySelector("#showTodoDialog"),n=document.querySelector("#todoDialog"),t=n.querySelector("#confirmBtn"),o=n.getElementsByClassName("input");e.addEventListener("click",(()=>{n.showModal()})),n.addEventListener("close",(e=>{let t;var o;"cancel"!=n.returnValue&&(t=n.returnValue.split(", ").reduce(((e,n)=>{const[t,o]=n.split(": ");return e[t.trim()]=isNaN(o)?o:parseInt(o),e}),{})),console.log(new B((o=t).title,o.description,o.due_date,o.priority,o.note))})),t.addEventListener("click",(e=>{e.preventDefault();let t=[];for(const e of o){if("radio"==e.type){if(!e.checked)continue;t.push(`${e.name}: ${e.value}`)}t.push(`${e.name}: ${e.value}`)}n.close(t.join(", "))}))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,