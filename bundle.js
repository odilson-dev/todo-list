(()=>{"use strict";var e={208:(e,n,t)=>{t.d(n,{A:()=>d});var o=t(354),r=t.n(o),i=t(314),a=t.n(i)()(r());a.push([e.id,"body {\n  font-family: Arial, Helvetica, sans-serif;\n  margin: 0;\n}\n/* HEADER */\nheader {\n  background-color: blueviolet;\n  padding: 15px;\n}\n.header {\n  display: flex;\n  justify-content: space-between;\n}\nheader h1 {\n  margin: 0;\n  padding: 5px;\n  color: white;\n}\n#showTodoDialog {\n  background-color: transparent;\n  color: white;\n  border: 1px solid white;\n  border-radius: 5px;\n  margin: 10px 15px;\n  transition: 500ms;\n}\n#showTodoDialog:hover {\n  background-color: white;\n  color: blueviolet;\n}\n\n.hide {\n  display: none;\n}\n\n/* PROJECTS */\n.project {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 10px;\n  background-color: aliceblue;\n  border-radius: 5px;\n  margin-top: 10px;\n  padding: 5px;\n  padding-right: 10px;\n}\n.project > h2 {\n  margin: 5px 0px;\n}\n.project:hover {\n  border: 2px solid black;\n}\n\n.content {\n  border: 1px solid black;\n  height: 100vh;\n  display: grid;\n  grid-template-columns: repeat(1, 1fr) repeat(1, 2.5fr);\n}\n\n.projects {\n  padding-left: 10px;\n  padding-right: 10px;\n  box-shadow: 3px 3px 10px rgb(225, 225, 225);\n}\n\n.todos {\n  padding: 0px 60px;\n}\n.projects-header {\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid rgb(204, 204, 204);\n}\n#showDialog {\n  margin: 20px;\n  border: 1px solid green;\n  background-color: transparent;\n  color: green;\n  border-radius: 5px;\n}\n.highlighted {\n  background-color: yellow; /* Example highlight color */\n}\n\n/* TODO ITEM */\n.todo {\n  display: grid;\n  grid-template-columns: repeat(1, 30px) repeat(1, 3fr) repeat(1, 1fr);\n  background-color: aliceblue;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  box-shadow: 0px 5px 5px 1px rgb(225, 225, 225);\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n  padding-right: 10px;\n}\n.todo-list {\n  padding-left: 0;\n  padding-right: 0;\n}\n.todo-text-content h2,\np {\n  margin: 3px;\n}\n.project-name {\n  border-bottom: 1px solid rgb(204, 204, 204);\n}\n.checkbox {\n  display: flex;\n  justify-content: space-evenly;\n}\n.buttons {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 10px;\n}\n.checkbox input,\n.buttons > * {\n  align-self: center;\n}\n.checkbox input {\n  margin: auto;\n}\n.description {\n  font-size: large;\n}\nh2 {\n  color: rgb(43, 43, 43);\n}\np {\n  font-size: small;\n  color: rgb(91, 91, 91);\n}\n\n/* EDIT AND DELETE BUTTONS */\n.delete-btn,\n.edit-btn {\n  background-color: transparent;\n  color: red;\n  border: 1px solid red;\n  padding: 5px 10px 5px 10px;\n  border-radius: 5px;\n  transition: 500ms;\n}\n.delete-btn:hover {\n  background-color: red;\n  color: white;\n  cursor: pointer;\n}\n.edit-btn {\n  color: orange;\n  border: 1px solid orange;\n}\n\n.edit-btn:hover {\n  background-color: orange;\n  color: white;\n  cursor: pointer;\n}\n\n.green-border {\n  border-bottom: 3px solid green;\n}\n.orange-border {\n  border-bottom: 3px solid orange;\n}\n\n.red-border {\n  border-bottom: 3px solid red;\n}\n#github-icon {\n  color: white;\n  font-size: 30px;\n}\na {\n  margin-left: 10px;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,yCAAyC;EACzC,SAAS;AACX;AACA,WAAW;AACX;EACE,4BAA4B;EAC5B,aAAa;AACf;AACA;EACE,aAAa;EACb,8BAA8B;AAChC;AACA;EACE,SAAS;EACT,YAAY;EACZ,YAAY;AACd;AACA;EACE,6BAA6B;EAC7B,YAAY;EACZ,uBAAuB;EACvB,kBAAkB;EAClB,iBAAiB;EACjB,iBAAiB;AACnB;AACA;EACE,uBAAuB;EACvB,iBAAiB;AACnB;;AAEA;EACE,aAAa;AACf;;AAEA,aAAa;AACb;EACE,aAAa;EACb,qCAAqC;EACrC,SAAS;EACT,2BAA2B;EAC3B,kBAAkB;EAClB,gBAAgB;EAChB,YAAY;EACZ,mBAAmB;AACrB;AACA;EACE,eAAe;AACjB;AACA;EACE,uBAAuB;AACzB;;AAEA;EACE,uBAAuB;EACvB,aAAa;EACb,aAAa;EACb,sDAAsD;AACxD;;AAEA;EACE,kBAAkB;EAClB,mBAAmB;EACnB,2CAA2C;AAC7C;;AAEA;EACE,iBAAiB;AACnB;AACA;EACE,aAAa;EACb,8BAA8B;EAC9B,2CAA2C;AAC7C;AACA;EACE,YAAY;EACZ,uBAAuB;EACvB,6BAA6B;EAC7B,YAAY;EACZ,kBAAkB;AACpB;AACA;EACE,wBAAwB,EAAE,4BAA4B;AACxD;;AAEA,cAAc;AACd;EACE,aAAa;EACb,oEAAoE;EACpE,2BAA2B;EAC3B,gBAAgB;EAChB,mBAAmB;EACnB,8CAA8C;EAC9C,2BAA2B;EAC3B,4BAA4B;EAC5B,mBAAmB;AACrB;AACA;EACE,eAAe;EACf,gBAAgB;AAClB;AACA;;EAEE,WAAW;AACb;AACA;EACE,2CAA2C;AAC7C;AACA;EACE,aAAa;EACb,6BAA6B;AAC/B;AACA;EACE,aAAa;EACb,qCAAqC;EACrC,SAAS;AACX;AACA;;EAEE,kBAAkB;AACpB;AACA;EACE,YAAY;AACd;AACA;EACE,gBAAgB;AAClB;AACA;EACE,sBAAsB;AACxB;AACA;EACE,gBAAgB;EAChB,sBAAsB;AACxB;;AAEA,4BAA4B;AAC5B;;EAEE,6BAA6B;EAC7B,UAAU;EACV,qBAAqB;EACrB,0BAA0B;EAC1B,kBAAkB;EAClB,iBAAiB;AACnB;AACA;EACE,qBAAqB;EACrB,YAAY;EACZ,eAAe;AACjB;AACA;EACE,aAAa;EACb,wBAAwB;AAC1B;;AAEA;EACE,wBAAwB;EACxB,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,8BAA8B;AAChC;AACA;EACE,+BAA+B;AACjC;;AAEA;EACE,4BAA4B;AAC9B;AACA;EACE,YAAY;EACZ,eAAe;AACjB;AACA;EACE,iBAAiB;AACnB",sourcesContent:["body {\n  font-family: Arial, Helvetica, sans-serif;\n  margin: 0;\n}\n/* HEADER */\nheader {\n  background-color: blueviolet;\n  padding: 15px;\n}\n.header {\n  display: flex;\n  justify-content: space-between;\n}\nheader h1 {\n  margin: 0;\n  padding: 5px;\n  color: white;\n}\n#showTodoDialog {\n  background-color: transparent;\n  color: white;\n  border: 1px solid white;\n  border-radius: 5px;\n  margin: 10px 15px;\n  transition: 500ms;\n}\n#showTodoDialog:hover {\n  background-color: white;\n  color: blueviolet;\n}\n\n.hide {\n  display: none;\n}\n\n/* PROJECTS */\n.project {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 10px;\n  background-color: aliceblue;\n  border-radius: 5px;\n  margin-top: 10px;\n  padding: 5px;\n  padding-right: 10px;\n}\n.project > h2 {\n  margin: 5px 0px;\n}\n.project:hover {\n  border: 2px solid black;\n}\n\n.content {\n  border: 1px solid black;\n  height: 100vh;\n  display: grid;\n  grid-template-columns: repeat(1, 1fr) repeat(1, 2.5fr);\n}\n\n.projects {\n  padding-left: 10px;\n  padding-right: 10px;\n  box-shadow: 3px 3px 10px rgb(225, 225, 225);\n}\n\n.todos {\n  padding: 0px 60px;\n}\n.projects-header {\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid rgb(204, 204, 204);\n}\n#showDialog {\n  margin: 20px;\n  border: 1px solid green;\n  background-color: transparent;\n  color: green;\n  border-radius: 5px;\n}\n.highlighted {\n  background-color: yellow; /* Example highlight color */\n}\n\n/* TODO ITEM */\n.todo {\n  display: grid;\n  grid-template-columns: repeat(1, 30px) repeat(1, 3fr) repeat(1, 1fr);\n  background-color: aliceblue;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  box-shadow: 0px 5px 5px 1px rgb(225, 225, 225);\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n  padding-right: 10px;\n}\n.todo-list {\n  padding-left: 0;\n  padding-right: 0;\n}\n.todo-text-content h2,\np {\n  margin: 3px;\n}\n.project-name {\n  border-bottom: 1px solid rgb(204, 204, 204);\n}\n.checkbox {\n  display: flex;\n  justify-content: space-evenly;\n}\n.buttons {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 10px;\n}\n.checkbox input,\n.buttons > * {\n  align-self: center;\n}\n.checkbox input {\n  margin: auto;\n}\n.description {\n  font-size: large;\n}\nh2 {\n  color: rgb(43, 43, 43);\n}\np {\n  font-size: small;\n  color: rgb(91, 91, 91);\n}\n\n/* EDIT AND DELETE BUTTONS */\n.delete-btn,\n.edit-btn {\n  background-color: transparent;\n  color: red;\n  border: 1px solid red;\n  padding: 5px 10px 5px 10px;\n  border-radius: 5px;\n  transition: 500ms;\n}\n.delete-btn:hover {\n  background-color: red;\n  color: white;\n  cursor: pointer;\n}\n.edit-btn {\n  color: orange;\n  border: 1px solid orange;\n}\n\n.edit-btn:hover {\n  background-color: orange;\n  color: white;\n  cursor: pointer;\n}\n\n.green-border {\n  border-bottom: 3px solid green;\n}\n.orange-border {\n  border-bottom: 3px solid orange;\n}\n\n.red-border {\n  border-bottom: 3px solid red;\n}\n#github-icon {\n  color: white;\n  font-size: 30px;\n}\na {\n  margin-left: 10px;\n}\n"],sourceRoot:""}]);const d=a},314:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(a[c]=!0)}for(var A=0;A<e.length;A++){var s=[].concat(e[A]);o&&a[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),n.push(s))}},n}},354:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},72:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var i={},a=[],d=0;d<e.length;d++){var c=e[d],A=o.base?c[0]+o.base:c[0],s=i[A]||0,l="".concat(A," ").concat(s);i[A]=s+1;var p=t(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var C=r(u,o);o.byIndex=d,n.splice(d,0,{identifier:l,updater:C,references:1})}a.push(l)}return a}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var d=t(i[a]);n[d].references--}for(var c=o(e,r),A=0;A<i.length;A++){var s=t(i[A]);0===n[s].references&&(n[s].updater(),n.splice(s,1))}i=c}}},659:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var i=n[o]={id:o,exports:{}};return e[o](i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{const e=function(e,t){const o=document.querySelector(".todo-list"),r=document.createElement("div");switch(r.classList.add("todo"),e.priority.toLowerCase()){case"hight":r.classList.add("red-border");break;case"medium":r.classList.add("orange-border");break;case"low":r.classList.add("green-border")}const i=document.createElement("h2");i.textContent=e.title;const a=document.createElement("p");a.textContent=e.description;const d=document.createElement("div");d.classList.add("checkbox");const c=document.createElement("button"),A=document.createElement("button");A.style.gridColumn="2 / span 1";const s=document.createElement("input");s.type="checkbox",e.checked?(s.checked=!0,i.style.textDecoration="line-through",a.style.textDecoration="line-through",c.classList.add("hide")):(i.style.textDecoration="none",a.style.textDecoration="none",c.classList.remove("hide")),s.addEventListener("click",(()=>{s.checked?(i.style.textDecoration="line-through",a.style.textDecoration="line-through",c.classList.add("hide"),e.checked=!0):(i.style.textDecoration="none",a.style.textDecoration="none",c.classList.remove("hide"),e.checked=!1)})),d.appendChild(s),r.appendChild(d);const l=document.createElement("div");l.classList.add("todo-text-content"),l.appendChild(i),l.appendChild(a),r.appendChild(l);const p=document.createElement("div");p.classList.add("buttons"),c.textContent="Edit",c.classList.add("edit-btn"),c.id=e.id,c.addEventListener("click",(()=>{document.getElementById("editTodoDialog").querySelector('input[name="id"]').value=e.id,function(e,t){const o=document.getElementById("editTodoDialog"),r=o.querySelectorAll(".input"),i=o.querySelector("#confirmBtn");o.querySelector('input[name="title"]').value=e.title,o.querySelector('input[name="description"]').value=e.description,o.querySelector('input[name="due_date"]').value=e.dueDate;const a=o.querySelectorAll('input[name="priority"]');for(const n of a)n.value===e.priority.toLowerCase()&&(n.checked=!0);o.querySelector('textarea[name="note"]').value=e.note,o.showModal(),o.addEventListener("close",(r=>{let i;"cancel"!=o.returnValue&&(i=o.returnValue.split(", ").reduce(((e,n)=>{const[t,o]=n.split(": ");return e[t.trim()]=isNaN(o)?o:parseInt(o),e}),{}),e.id==i.id&&(e.title=i.title,e.description=i.description,e.dueDate=i.due_date,e.priority=i.priority,e.note=i.note),n(t))})),i.addEventListener("click",(e=>{e.preventDefault();let n=[];for(const e of r){if("radio"==e.type){if(!e.checked)continue;n.push(`${e.name}: ${e.value}`)}n.push(`${e.name}: ${e.value}`)}o.close(n.join(", "))}))}(e,t)})),p.appendChild(c),A.id=e.id,A.textContent="Delete",A.classList.add("delete-btn"),A.addEventListener("click",(()=>{t.todoList=t.todoList.filter((e=>e.id!=A.id)),n(t)})),p.appendChild(A),r.appendChild(p),o.appendChild(r)},n=function(n){document.querySelector(".todo-list").textContent="";for(const t of n.todoList)e(t,n)};let o;const r=document.querySelector(".project-name").querySelector("h2"),i=function(e){const n=document.querySelector("output");n.textContent="";for(const t of e)a(t,n)};function a(e,t){const a=document.createElement("div");a.classList.add("project");const d=document.createElement("div");d.classList.add("buttons");const A=document.createElement("h2");A.textContent=e.name,A.id=e.id,A.style.cursor="pointer",A.addEventListener("click",(()=>{r.textContent=e.name,n(e)})),a.appendChild(A);const s=document.createElement("button");s.textContent="Edit",s.classList.add("edit-btn"),s.addEventListener("click",(()=>{!function(e,n){const t=document.getElementById("editDialog"),o=t.querySelector("#edit-project"),r=t.querySelector("#confirmBtnEdit");o.value=e.name,t.showModal(),o.addEventListener("change",(()=>{r.value=o.value})),t.addEventListener("close",(()=>{"cancel"!=t.returnValue&&(e.name=t.returnValue,n.querySelector("h2").textContent=t.returnValue,document.querySelector(".project-name").querySelector("h2").textContent=t.returnValue)})),r.addEventListener("click",(e=>{e.preventDefault(),t.close(o.value)}))}(e,a)})),d.appendChild(s);const l=document.createElement("button");l.textContent="Delete",l.id=e.id,l.classList.add("delete-btn"),l.addEventListener("click",(()=>{const e=document.querySelector("#showTodoDialog"),n=document.querySelector(".todo-list");confirm("Do you really want to delete this project?")&&(console.log("Loll"),c=c.filter((e=>e.id!=l.id))),n.textContent="",r.textContent="",0==c.length&&e.classList.add("hide"),i(c)})),d.appendChild(l),a.appendChild(d),a.addEventListener("click",(()=>{o=e})),t.appendChild(a)}class d{static idCounter=0;constructor(e){this.name=e,this.id=++d.idCounter,this.todoList=[{id:1,title:"Todo",description:"This is a description",dueDate:"2024-03-04",priority:"Hight",note:"This is a small note for the todo",checked:!0},{id:2,title:"Todo",description:"This is a description",dueDate:"2024-03-04",priority:"Hight",note:"This is a small note for the todo",checked:!1},{id:3,title:"Todo",description:"This is a description",dueDate:"2024-03-04",priority:"Hight",note:"This is a small note for the todo",checked:!0}]}}let c=[];const A=document.querySelector("#showTodoDialog");var s=t(72),l=t.n(s),p=t(825),u=t.n(p),C=t(659),h=t.n(C),E=t(56),g=t.n(E),m=t(540),b=t.n(m),x=t(113),B=t.n(x),f=t(208),v={};v.styleTagTransform=B(),v.setAttributes=g(),v.insert=h().bind(null,"head"),v.domAPI=u(),v.insertStyleElement=b(),l()(f.A,v),f.A&&f.A.locals&&f.A.locals;class y{static todoID=0;constructor(e,n,t,o,r,i){this.id=++y.todoID,this.title=e,this.description=n,this.dueDate=t,this.priority=o,this.note=r,this.projectID=i,this.checked=!1}}!function(){const e=document.getElementById("showDialog"),n=document.getElementById("favDialog"),t=n.querySelector("#new-project"),o=n.querySelector("#confirmBtn");0==c.length&&A.classList.add("hide"),e.addEventListener("click",(()=>{n.showModal()})),t.addEventListener("change",(e=>{o.value=t.value})),n.addEventListener("close",(e=>{!function(e){const n=new d(e);c.push(n),i(c),1==c.length&&A.classList.remove("hide")}(n.returnValue)})),o.addEventListener("click",(e=>{e.preventDefault(),n.close(t.value)}))}(),function(){const e=document.querySelector("#showTodoDialog"),t=document.querySelector("#todoDialog"),r=t.querySelector("#confirmBtn"),i=t.getElementsByClassName("input");e.addEventListener("click",(()=>{t.showModal()})),t.addEventListener("close",(e=>{let r;var i;"cancel"!=t.returnValue&&(r=t.returnValue.split(", ").reduce(((e,n)=>{const[t,o]=n.split(": ");return e[t.trim()]=isNaN(o)?o:parseInt(o),e}),{})),o.todoList.push(new y((i=r).title,i.description,i.due_date,i.priority,i.note)),n(o)})),r.addEventListener("click",(e=>{e.preventDefault();let n=[];for(const e of i){if("radio"==e.type){if(!e.checked)continue;n.push(`${e.name}: ${e.value}`)}n.push(`${e.name}: ${e.value}`)}t.close(n.join(", "))}))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,