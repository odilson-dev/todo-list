(()=>{"use strict";var e={208:(e,n,t)=>{t.d(n,{A:()=>c});var o=t(354),r=t.n(o),i=t(314),a=t.n(i)()(r());a.push([e.id,"body {\n  font-family: Arial, Helvetica, sans-serif;\n  margin: 0;\n}\n/* HEADER */\nheader {\n  background-color: blueviolet;\n  padding: 15px;\n}\n.header {\n  display: flex;\n  justify-content: space-between;\n}\nheader h1 {\n  margin: 0;\n  padding: 5px;\n  color: white;\n}\n#showTodoDialog {\n  background-color: transparent;\n  color: white;\n  border: 1px solid white;\n  border-radius: 5px;\n  margin: 10px 15px;\n  transition: 500ms;\n}\n#showTodoDialog:hover {\n  background-color: white;\n  color: blueviolet;\n}\n\n/* PROJECTS */\n.project {\n  border: 1px solid black;\n  display: grid;\n  grid-template-columns: repeat(1, 1fr) repeat(2, 1fr);\n  gap: 15px;\n}\n#showDialog {\n  width: 100%;\n}\n.content {\n  border: 1px solid black;\n  height: 100vh;\n  display: grid;\n  grid-template-columns: repeat(1, 1fr) repeat(1, 2fr);\n}\n\n.projects {\n  border: 1px solid coral;\n}\n\n.todos {\n  border: 1px solid gold;\n}\n\n/* TODO ITEM */\n.todo {\n  display: grid;\n  grid-template-columns: repeat(1, 30px) repeat(1, 3fr) repeat(1, 1fr);\n  background-color: aliceblue;\n  border-radius: 15px;\n}\n.todo-text-content h2,\np {\n  margin: 3px;\n}\n.checkbox,\n.buttons {\n  display: flex;\n  justify-content: space-evenly;\n}\n.checkbox input,\n.buttons > * {\n  align-self: center;\n}\n.checkbox input {\n  margin: auto;\n}\n.description {\n  font-size: large;\n}\nh2 {\n  color: rgb(43, 43, 43);\n}\np {\n  font-size: small;\n  color: rgb(91, 91, 91);\n}\n\n/* EDIT AND DELETE BUTTONS */\n.delete-btn,\n.edit-btn {\n  background-color: transparent;\n  color: red;\n  border: 2px solid red;\n  padding: 5px 10px 5px 10px;\n  border-radius: 5px;\n  transition: 500ms;\n}\n.delete-btn:hover {\n  background-color: red;\n  color: white;\n  cursor: pointer;\n}\n.edit-btn {\n  color: orange;\n  border: 2px solid orange;\n}\n\n.edit-btn:hover {\n  background-color: orange;\n  color: white;\n  cursor: pointer;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,yCAAyC;EACzC,SAAS;AACX;AACA,WAAW;AACX;EACE,4BAA4B;EAC5B,aAAa;AACf;AACA;EACE,aAAa;EACb,8BAA8B;AAChC;AACA;EACE,SAAS;EACT,YAAY;EACZ,YAAY;AACd;AACA;EACE,6BAA6B;EAC7B,YAAY;EACZ,uBAAuB;EACvB,kBAAkB;EAClB,iBAAiB;EACjB,iBAAiB;AACnB;AACA;EACE,uBAAuB;EACvB,iBAAiB;AACnB;;AAEA,aAAa;AACb;EACE,uBAAuB;EACvB,aAAa;EACb,oDAAoD;EACpD,SAAS;AACX;AACA;EACE,WAAW;AACb;AACA;EACE,uBAAuB;EACvB,aAAa;EACb,aAAa;EACb,oDAAoD;AACtD;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,sBAAsB;AACxB;;AAEA,cAAc;AACd;EACE,aAAa;EACb,oEAAoE;EACpE,2BAA2B;EAC3B,mBAAmB;AACrB;AACA;;EAEE,WAAW;AACb;AACA;;EAEE,aAAa;EACb,6BAA6B;AAC/B;AACA;;EAEE,kBAAkB;AACpB;AACA;EACE,YAAY;AACd;AACA;EACE,gBAAgB;AAClB;AACA;EACE,sBAAsB;AACxB;AACA;EACE,gBAAgB;EAChB,sBAAsB;AACxB;;AAEA,4BAA4B;AAC5B;;EAEE,6BAA6B;EAC7B,UAAU;EACV,qBAAqB;EACrB,0BAA0B;EAC1B,kBAAkB;EAClB,iBAAiB;AACnB;AACA;EACE,qBAAqB;EACrB,YAAY;EACZ,eAAe;AACjB;AACA;EACE,aAAa;EACb,wBAAwB;AAC1B;;AAEA;EACE,wBAAwB;EACxB,YAAY;EACZ,eAAe;AACjB",sourcesContent:["body {\n  font-family: Arial, Helvetica, sans-serif;\n  margin: 0;\n}\n/* HEADER */\nheader {\n  background-color: blueviolet;\n  padding: 15px;\n}\n.header {\n  display: flex;\n  justify-content: space-between;\n}\nheader h1 {\n  margin: 0;\n  padding: 5px;\n  color: white;\n}\n#showTodoDialog {\n  background-color: transparent;\n  color: white;\n  border: 1px solid white;\n  border-radius: 5px;\n  margin: 10px 15px;\n  transition: 500ms;\n}\n#showTodoDialog:hover {\n  background-color: white;\n  color: blueviolet;\n}\n\n/* PROJECTS */\n.project {\n  border: 1px solid black;\n  display: grid;\n  grid-template-columns: repeat(1, 1fr) repeat(2, 1fr);\n  gap: 15px;\n}\n#showDialog {\n  width: 100%;\n}\n.content {\n  border: 1px solid black;\n  height: 100vh;\n  display: grid;\n  grid-template-columns: repeat(1, 1fr) repeat(1, 2fr);\n}\n\n.projects {\n  border: 1px solid coral;\n}\n\n.todos {\n  border: 1px solid gold;\n}\n\n/* TODO ITEM */\n.todo {\n  display: grid;\n  grid-template-columns: repeat(1, 30px) repeat(1, 3fr) repeat(1, 1fr);\n  background-color: aliceblue;\n  border-radius: 15px;\n}\n.todo-text-content h2,\np {\n  margin: 3px;\n}\n.checkbox,\n.buttons {\n  display: flex;\n  justify-content: space-evenly;\n}\n.checkbox input,\n.buttons > * {\n  align-self: center;\n}\n.checkbox input {\n  margin: auto;\n}\n.description {\n  font-size: large;\n}\nh2 {\n  color: rgb(43, 43, 43);\n}\np {\n  font-size: small;\n  color: rgb(91, 91, 91);\n}\n\n/* EDIT AND DELETE BUTTONS */\n.delete-btn,\n.edit-btn {\n  background-color: transparent;\n  color: red;\n  border: 2px solid red;\n  padding: 5px 10px 5px 10px;\n  border-radius: 5px;\n  transition: 500ms;\n}\n.delete-btn:hover {\n  background-color: red;\n  color: white;\n  cursor: pointer;\n}\n.edit-btn {\n  color: orange;\n  border: 2px solid orange;\n}\n\n.edit-btn:hover {\n  background-color: orange;\n  color: white;\n  cursor: pointer;\n}\n"],sourceRoot:""}]);const c=a},314:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(a[d]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);o&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),n.push(l))}},n}},354:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},72:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var i={},a=[],c=0;c<e.length;c++){var d=e[c],s=o.base?d[0]+o.base:d[0],l=i[s]||0,A="".concat(s," ").concat(l);i[s]=l+1;var u=t(A),p={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)n[u].references++,n[u].updater(p);else{var E=r(p,o);o.byIndex=c,n.splice(c,0,{identifier:A,updater:E,references:1})}a.push(A)}return a}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var c=t(i[a]);n[c].references--}for(var d=o(e,r),s=0;s<i.length;s++){var l=t(i[s]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}i=d}}},659:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var i=n[o]={id:o,exports:{}};return e[o](i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{const e=function(e,t){const o=document.querySelector(".todos"),r=document.createElement("div");r.classList.add("todo");const i=document.createElement("div");i.classList.add("checkbox");const a=document.createElement("input");a.type="checkbox",i.appendChild(a),r.appendChild(i);const c=document.createElement("div");c.classList.add("todo-text-content");const d=document.createElement("h2");d.textContent=e.title,c.appendChild(d);const s=document.createElement("p");s.textContent=e.description,c.appendChild(s);const l=document.createElement("p");l.textContent=`Due date: ${e.dueDate}`,c.appendChild(l);const A=document.createElement("p");A.textContent=`Priority: ${e.priority}`,c.appendChild(A);const u=document.createElement("p");u.textContent=`Note: ${e.note}`,c.appendChild(u),r.appendChild(c);const p=document.createElement("div");p.classList.add("buttons");const E=document.createElement("button");E.textContent="Edit",E.classList.add("edit-btn"),E.addEventListener("click",(()=>{!function(e,t){const o=document.getElementById("editTodoDialog"),r=o.querySelectorAll(".input"),i=o.querySelector("#confirmBtn");o.querySelector('input[name="title"]').value=e.title,o.querySelector('input[name="description"]').value=e.description,o.querySelector('input[name="due_date"]').value=e.dueDate;const a=o.querySelectorAll('input[name="priority"]');for(const n of a)n.value===e.priority.toLowerCase()&&(n.checked=!0);o.querySelector('textarea[name="note"]').value=e.note,o.showModal(),o.addEventListener("close",(r=>{let i;"cancel"!=o.returnValue&&(i=o.returnValue.split(", ").reduce(((e,n)=>{const[t,o]=n.split(": ");return e[t.trim()]=isNaN(o)?o:parseInt(o),e}),{}),console.log(e),e.title=i.title,e.description=i.description,e.dueDate=i.due_date,e.priority=i.priority,e.note=i.note,n(t))})),i.addEventListener("click",(e=>{e.preventDefault();let n=[];for(const e of r){if("radio"==e.type){if(!e.checked)continue;n.push(`${e.name}: ${e.value}`)}n.push(`${e.name}: ${e.value}`)}o.close(n.join(", "))}))}(e,t)})),p.appendChild(E);const h=document.createElement("button");h.id=e.id,h.textContent="Delete",h.classList.add("delete-btn"),h.addEventListener("click",(()=>{t.todoList=t.todoList.filter((e=>e.id!=h.id)),n(t)})),p.appendChild(h),r.appendChild(p),o.appendChild(r)},n=function(n){document.querySelector(".todos").textContent="";for(const t of n.todoList)e(t,n)};class o{static idCounter=0;constructor(e){this.name=e,this.id=++o.idCounter,this.todoList=[{id:1,title:"Todo",description:"This is a description",dueDate:"2024-03-04",priority:"Hight",note:"This is a small note for the todo"},{id:2,title:"Todo",description:"This is a description",dueDate:"2024-03-04",priority:"Hight",note:"This is a small note for the todo"},{id:3,title:"Todo",description:"This is a description",dueDate:"2024-03-04",priority:"Hight",note:"This is a small note for the todo"}]}}var r=t(72),i=t.n(r),a=t(825),c=t.n(a),d=t(659),s=t.n(d),l=t(56),A=t.n(l),u=t(540),p=t.n(u),E=t(113),h=t.n(E),C=t(208),m={};m.styleTagTransform=h(),m.setAttributes=A(),m.insert=s().bind(null,"head"),m.domAPI=c(),m.insertStyleElement=p(),i()(C.A,m),C.A&&C.A.locals&&C.A.locals;class f{static todoID=0;constructor(e,n,t,o,r,i){this.id=++f.todoID,this.title=e,this.description=n,this.dueDate=t,this.priority=o,this.note=r,this.projectID=i}}!function(){const e=document.getElementById("showDialog"),t=document.getElementById("favDialog"),r=t.querySelector("#new-project"),i=t.querySelector("#confirmBtn");e.classList.add("hello"),e.addEventListener("click",(()=>{t.showModal()})),r.addEventListener("change",(e=>{i.value=r.value})),t.addEventListener("close",(e=>{var r;r=t.returnValue,function(e){const t=document.querySelector("output"),o=document.createElement("div");o.classList.add("project"),o.addEventListener("click",(()=>{n(e)})),o.innerHTML=`<h3>${e.name}</h3>`;const r=document.createElement("button");r.textContent="Edit",r.addEventListener("click",(()=>{!function(e,n){const t=document.getElementById("editDialog"),o=t.querySelector("#edit-project"),r=t.querySelector("#confirmBtnEdit");o.value=e.name,t.showModal(),o.addEventListener("change",(()=>{r.value=o.value})),t.addEventListener("close",(()=>{"cancel"!=t.returnValue&&(e.name=t.returnValue,n.querySelector("h3").textContent=t.returnValue,console.log(e.name))})),r.addEventListener("click",(e=>{e.preventDefault(),t.close(o.value)}))}(e,o)})),o.appendChild(r);const i=document.createElement("button");i.textContent="Delete",i.addEventListener("click",(()=>{!function(e){e.remove()}(o)})),o.appendChild(i),t.appendChild(o)}(new o(r))})),i.addEventListener("click",(e=>{e.preventDefault(),t.close(r.value)}))}(),function(){const e=document.querySelector("#showTodoDialog"),n=document.querySelector("#todoDialog"),t=n.querySelector("#confirmBtn"),o=n.getElementsByClassName("input");e.addEventListener("click",(()=>{n.showModal()})),n.addEventListener("close",(e=>{let t;var o;"cancel"!=n.returnValue&&(t=n.returnValue.split(", ").reduce(((e,n)=>{const[t,o]=n.split(": ");return e[t.trim()]=isNaN(o)?o:parseInt(o),e}),{})),console.log(new f((o=t).title,o.description,o.due_date,o.priority,o.note))})),t.addEventListener("click",(e=>{e.preventDefault();let t=[];for(const e of o){if("radio"==e.type){if(!e.checked)continue;t.push(`${e.name}: ${e.value}`)}t.push(`${e.name}: ${e.value}`)}n.close(t.join(", "))}))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LFFBSTFDLENBQ0FwSCxFQUFLaEMsS0FBSyxHQUFHK0UsRUFBUTBGLFNBQVMxRixFQUFRcUUsUUFDeEMsQ0FFQWtELEVBQVc1QixNQUFNMUksRUFBS2xCLEtBQUssTUFBTSxHQUVyQyxDRG5EQTJMLEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvc3R5bGUuY3NzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvZWRpdF90b2Rvcy5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9zcmMvdG9kb0RvbUNyZWF0aW9uLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9sb2FkVG9kb3MuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL3Byb2plY3QuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL3N0eWxlLmNzcz83MTYzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy90b2RvLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9wcm9qZWN0X2NyZWF0aW9uLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9lZGl0X3Byb2plY3QuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy90b2Rvc0NyZWF0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGBib2R5IHtcbiAgZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XG4gIG1hcmdpbjogMDtcbn1cbi8qIEhFQURFUiAqL1xuaGVhZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogYmx1ZXZpb2xldDtcbiAgcGFkZGluZzogMTVweDtcbn1cbi5oZWFkZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5oZWFkZXIgaDEge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDVweDtcbiAgY29sb3I6IHdoaXRlO1xufVxuI3Nob3dUb2RvRGlhbG9nIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYm9yZGVyOiAxcHggc29saWQgd2hpdGU7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgbWFyZ2luOiAxMHB4IDE1cHg7XG4gIHRyYW5zaXRpb246IDUwMG1zO1xufVxuI3Nob3dUb2RvRGlhbG9nOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGNvbG9yOiBibHVldmlvbGV0O1xufVxuXG4vKiBQUk9KRUNUUyAqL1xuLnByb2plY3Qge1xuICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMSwgMWZyKSByZXBlYXQoMiwgMWZyKTtcbiAgZ2FwOiAxNXB4O1xufVxuI3Nob3dEaWFsb2cge1xuICB3aWR0aDogMTAwJTtcbn1cbi5jb250ZW50IHtcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XG4gIGhlaWdodDogMTAwdmg7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEsIDFmcikgcmVwZWF0KDEsIDJmcik7XG59XG5cbi5wcm9qZWN0cyB7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGNvcmFsO1xufVxuXG4udG9kb3Mge1xuICBib3JkZXI6IDFweCBzb2xpZCBnb2xkO1xufVxuXG4vKiBUT0RPIElURU0gKi9cbi50b2RvIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMSwgMzBweCkgcmVwZWF0KDEsIDNmcikgcmVwZWF0KDEsIDFmcik7XG4gIGJhY2tncm91bmQtY29sb3I6IGFsaWNlYmx1ZTtcbiAgYm9yZGVyLXJhZGl1czogMTVweDtcbn1cbi50b2RvLXRleHQtY29udGVudCBoMixcbnAge1xuICBtYXJnaW46IDNweDtcbn1cbi5jaGVja2JveCxcbi5idXR0b25zIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XG59XG4uY2hlY2tib3ggaW5wdXQsXG4uYnV0dG9ucyA+ICoge1xuICBhbGlnbi1zZWxmOiBjZW50ZXI7XG59XG4uY2hlY2tib3ggaW5wdXQge1xuICBtYXJnaW46IGF1dG87XG59XG4uZGVzY3JpcHRpb24ge1xuICBmb250LXNpemU6IGxhcmdlO1xufVxuaDIge1xuICBjb2xvcjogcmdiKDQzLCA0MywgNDMpO1xufVxucCB7XG4gIGZvbnQtc2l6ZTogc21hbGw7XG4gIGNvbG9yOiByZ2IoOTEsIDkxLCA5MSk7XG59XG5cbi8qIEVESVQgQU5EIERFTEVURSBCVVRUT05TICovXG4uZGVsZXRlLWJ0bixcbi5lZGl0LWJ0biB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICBjb2xvcjogcmVkO1xuICBib3JkZXI6IDJweCBzb2xpZCByZWQ7XG4gIHBhZGRpbmc6IDVweCAxMHB4IDVweCAxMHB4O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIHRyYW5zaXRpb246IDUwMG1zO1xufVxuLmRlbGV0ZS1idG46aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuLmVkaXQtYnRuIHtcbiAgY29sb3I6IG9yYW5nZTtcbiAgYm9yZGVyOiAycHggc29saWQgb3JhbmdlO1xufVxuXG4uZWRpdC1idG46aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBvcmFuZ2U7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UseUNBQXlDO0VBQ3pDLFNBQVM7QUFDWDtBQUNBLFdBQVc7QUFDWDtFQUNFLDRCQUE0QjtFQUM1QixhQUFhO0FBQ2Y7QUFDQTtFQUNFLGFBQWE7RUFDYiw4QkFBOEI7QUFDaEM7QUFDQTtFQUNFLFNBQVM7RUFDVCxZQUFZO0VBQ1osWUFBWTtBQUNkO0FBQ0E7RUFDRSw2QkFBNkI7RUFDN0IsWUFBWTtFQUNaLHVCQUF1QjtFQUN2QixrQkFBa0I7RUFDbEIsaUJBQWlCO0VBQ2pCLGlCQUFpQjtBQUNuQjtBQUNBO0VBQ0UsdUJBQXVCO0VBQ3ZCLGlCQUFpQjtBQUNuQjs7QUFFQSxhQUFhO0FBQ2I7RUFDRSx1QkFBdUI7RUFDdkIsYUFBYTtFQUNiLG9EQUFvRDtFQUNwRCxTQUFTO0FBQ1g7QUFDQTtFQUNFLFdBQVc7QUFDYjtBQUNBO0VBQ0UsdUJBQXVCO0VBQ3ZCLGFBQWE7RUFDYixhQUFhO0VBQ2Isb0RBQW9EO0FBQ3REOztBQUVBO0VBQ0UsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCOztBQUVBLGNBQWM7QUFDZDtFQUNFLGFBQWE7RUFDYixvRUFBb0U7RUFDcEUsMkJBQTJCO0VBQzNCLG1CQUFtQjtBQUNyQjtBQUNBOztFQUVFLFdBQVc7QUFDYjtBQUNBOztFQUVFLGFBQWE7RUFDYiw2QkFBNkI7QUFDL0I7QUFDQTs7RUFFRSxrQkFBa0I7QUFDcEI7QUFDQTtFQUNFLFlBQVk7QUFDZDtBQUNBO0VBQ0UsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxzQkFBc0I7QUFDeEI7QUFDQTtFQUNFLGdCQUFnQjtFQUNoQixzQkFBc0I7QUFDeEI7O0FBRUEsNEJBQTRCO0FBQzVCOztFQUVFLDZCQUE2QjtFQUM3QixVQUFVO0VBQ1YscUJBQXFCO0VBQ3JCLDBCQUEwQjtFQUMxQixrQkFBa0I7RUFDbEIsaUJBQWlCO0FBQ25CO0FBQ0E7RUFDRSxxQkFBcUI7RUFDckIsWUFBWTtFQUNaLGVBQWU7QUFDakI7QUFDQTtFQUNFLGFBQWE7RUFDYix3QkFBd0I7QUFDMUI7O0FBRUE7RUFDRSx3QkFBd0I7RUFDeEIsWUFBWTtFQUNaLGVBQWU7QUFDakJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiYm9keSB7XFxuICBmb250LWZhbWlseTogQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcXG4gIG1hcmdpbjogMDtcXG59XFxuLyogSEVBREVSICovXFxuaGVhZGVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IGJsdWV2aW9sZXQ7XFxuICBwYWRkaW5nOiAxNXB4O1xcbn1cXG4uaGVhZGVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxufVxcbmhlYWRlciBoMSB7XFxuICBtYXJnaW46IDA7XFxuICBwYWRkaW5nOiA1cHg7XFxuICBjb2xvcjogd2hpdGU7XFxufVxcbiNzaG93VG9kb0RpYWxvZyB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gIGNvbG9yOiB3aGl0ZTtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHdoaXRlO1xcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgbWFyZ2luOiAxMHB4IDE1cHg7XFxuICB0cmFuc2l0aW9uOiA1MDBtcztcXG59XFxuI3Nob3dUb2RvRGlhbG9nOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xcbiAgY29sb3I6IGJsdWV2aW9sZXQ7XFxufVxcblxcbi8qIFBST0pFQ1RTICovXFxuLnByb2plY3Qge1xcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XFxuICBkaXNwbGF5OiBncmlkO1xcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMSwgMWZyKSByZXBlYXQoMiwgMWZyKTtcXG4gIGdhcDogMTVweDtcXG59XFxuI3Nob3dEaWFsb2cge1xcbiAgd2lkdGg6IDEwMCU7XFxufVxcbi5jb250ZW50IHtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xcbiAgaGVpZ2h0OiAxMDB2aDtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxLCAxZnIpIHJlcGVhdCgxLCAyZnIpO1xcbn1cXG5cXG4ucHJvamVjdHMge1xcbiAgYm9yZGVyOiAxcHggc29saWQgY29yYWw7XFxufVxcblxcbi50b2RvcyB7XFxuICBib3JkZXI6IDFweCBzb2xpZCBnb2xkO1xcbn1cXG5cXG4vKiBUT0RPIElURU0gKi9cXG4udG9kbyB7XFxuICBkaXNwbGF5OiBncmlkO1xcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMSwgMzBweCkgcmVwZWF0KDEsIDNmcikgcmVwZWF0KDEsIDFmcik7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiBhbGljZWJsdWU7XFxuICBib3JkZXItcmFkaXVzOiAxNXB4O1xcbn1cXG4udG9kby10ZXh0LWNvbnRlbnQgaDIsXFxucCB7XFxuICBtYXJnaW46IDNweDtcXG59XFxuLmNoZWNrYm94LFxcbi5idXR0b25zIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcXG59XFxuLmNoZWNrYm94IGlucHV0LFxcbi5idXR0b25zID4gKiB7XFxuICBhbGlnbi1zZWxmOiBjZW50ZXI7XFxufVxcbi5jaGVja2JveCBpbnB1dCB7XFxuICBtYXJnaW46IGF1dG87XFxufVxcbi5kZXNjcmlwdGlvbiB7XFxuICBmb250LXNpemU6IGxhcmdlO1xcbn1cXG5oMiB7XFxuICBjb2xvcjogcmdiKDQzLCA0MywgNDMpO1xcbn1cXG5wIHtcXG4gIGZvbnQtc2l6ZTogc21hbGw7XFxuICBjb2xvcjogcmdiKDkxLCA5MSwgOTEpO1xcbn1cXG5cXG4vKiBFRElUIEFORCBERUxFVEUgQlVUVE9OUyAqL1xcbi5kZWxldGUtYnRuLFxcbi5lZGl0LWJ0biB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gIGNvbG9yOiByZWQ7XFxuICBib3JkZXI6IDJweCBzb2xpZCByZWQ7XFxuICBwYWRkaW5nOiA1cHggMTBweCA1cHggMTBweDtcXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gIHRyYW5zaXRpb246IDUwMG1zO1xcbn1cXG4uZGVsZXRlLWJ0bjpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XFxuICBjb2xvcjogd2hpdGU7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcbi5lZGl0LWJ0biB7XFxuICBjb2xvcjogb3JhbmdlO1xcbiAgYm9yZGVyOiAycHggc29saWQgb3JhbmdlO1xcbn1cXG5cXG4uZWRpdC1idG46aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogb3JhbmdlO1xcbiAgY29sb3I6IHdoaXRlO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiaW1wb3J0IHsgbG9hZFRvZG9zIH0gZnJvbSBcIi4vbG9hZFRvZG9zXCI7XG5cbmV4cG9ydCBjb25zdCBlZGl0VG9kb3MgPSBmdW5jdGlvbiAodG9kbywgcHJvamVjdCkge1xuICBjb25zdCBlZGl0VG9kb0RpYWxvZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZWRpdFRvZG9EaWFsb2dcIik7XG4gIGNvbnN0IGlucHV0RWxlbWVudHMgPSBlZGl0VG9kb0RpYWxvZy5xdWVyeVNlbGVjdG9yQWxsKFwiLmlucHV0XCIpO1xuICBjb25zdCBjb25maXJtQnRuID0gZWRpdFRvZG9EaWFsb2cucXVlcnlTZWxlY3RvcihcIiNjb25maXJtQnRuXCIpO1xuXG4gIGNvbnN0IHRvZG9UaXRsZUlucHV0ID0gZWRpdFRvZG9EaWFsb2cucXVlcnlTZWxlY3RvcignaW5wdXRbbmFtZT1cInRpdGxlXCJdJyk7XG4gIHRvZG9UaXRsZUlucHV0LnZhbHVlID0gdG9kby50aXRsZTtcblxuICBjb25zdCB0b2RvRGVzY3JpcHRpb25JbnB1dCA9IGVkaXRUb2RvRGlhbG9nLnF1ZXJ5U2VsZWN0b3IoXG4gICAgJ2lucHV0W25hbWU9XCJkZXNjcmlwdGlvblwiXSdcbiAgKTtcbiAgdG9kb0Rlc2NyaXB0aW9uSW5wdXQudmFsdWUgPSB0b2RvLmRlc2NyaXB0aW9uO1xuXG4gIGNvbnN0IHRvZG9EdWVEYXRlSW5wdXQgPSBlZGl0VG9kb0RpYWxvZy5xdWVyeVNlbGVjdG9yKFxuICAgICdpbnB1dFtuYW1lPVwiZHVlX2RhdGVcIl0nXG4gICk7XG4gIHRvZG9EdWVEYXRlSW5wdXQudmFsdWUgPSB0b2RvLmR1ZURhdGU7XG5cbiAgY29uc3QgdG9kb1ByaW9yaXR5SW5wdXRzID0gZWRpdFRvZG9EaWFsb2cucXVlcnlTZWxlY3RvckFsbChcbiAgICAnaW5wdXRbbmFtZT1cInByaW9yaXR5XCJdJ1xuICApO1xuXG4gIGZvciAoY29uc3QgaXRlcmF0b3Igb2YgdG9kb1ByaW9yaXR5SW5wdXRzKSB7XG4gICAgaWYgKGl0ZXJhdG9yLnZhbHVlID09PSB0b2RvLnByaW9yaXR5LnRvTG93ZXJDYXNlKCkpIHtcbiAgICAgIGl0ZXJhdG9yLmNoZWNrZWQgPSB0cnVlO1xuICAgIH1cbiAgfVxuICBjb25zdCB0b2RvTm90ZUlucHV0ID0gZWRpdFRvZG9EaWFsb2cucXVlcnlTZWxlY3RvcigndGV4dGFyZWFbbmFtZT1cIm5vdGVcIl0nKTtcbiAgdG9kb05vdGVJbnB1dC52YWx1ZSA9IHRvZG8ubm90ZTtcbiAgZWRpdFRvZG9EaWFsb2cuc2hvd01vZGFsKCk7XG5cbiAgZWRpdFRvZG9EaWFsb2cuYWRkRXZlbnRMaXN0ZW5lcihcImNsb3NlXCIsIChlKSA9PiB7XG4gICAgbGV0IHRvZG9VcGRhdGVkRGF0YTtcbiAgICBpZiAoZWRpdFRvZG9EaWFsb2cucmV0dXJuVmFsdWUgIT0gXCJjYW5jZWxcIikge1xuICAgICAgdG9kb1VwZGF0ZWREYXRhID0gZWRpdFRvZG9EaWFsb2cucmV0dXJuVmFsdWVcbiAgICAgICAgLnNwbGl0KFwiLCBcIilcbiAgICAgICAgLnJlZHVjZSgoYWNjLCBjdXJyZW50VmFsdWUpID0+IHtcbiAgICAgICAgICBjb25zdCBba2V5LCB2YWx1ZV0gPSBjdXJyZW50VmFsdWUuc3BsaXQoXCI6IFwiKTtcbiAgICAgICAgICBhY2Nba2V5LnRyaW0oKV0gPSBpc05hTih2YWx1ZSkgPyB2YWx1ZSA6IHBhcnNlSW50KHZhbHVlKTtcbiAgICAgICAgICByZXR1cm4gYWNjO1xuICAgICAgICB9LCB7fSk7XG4gICAgICBjb25zb2xlLmxvZyh0b2RvKTtcbiAgICAgIHRvZG8udGl0bGUgPSB0b2RvVXBkYXRlZERhdGEudGl0bGU7XG4gICAgICB0b2RvLmRlc2NyaXB0aW9uID0gdG9kb1VwZGF0ZWREYXRhLmRlc2NyaXB0aW9uO1xuICAgICAgdG9kby5kdWVEYXRlID0gdG9kb1VwZGF0ZWREYXRhLmR1ZV9kYXRlO1xuICAgICAgdG9kby5wcmlvcml0eSA9IHRvZG9VcGRhdGVkRGF0YS5wcmlvcml0eTtcbiAgICAgIHRvZG8ubm90ZSA9IHRvZG9VcGRhdGVkRGF0YS5ub3RlO1xuICAgICAgbG9hZFRvZG9zKHByb2plY3QpO1xuICAgIH1cbiAgfSk7XG5cbiAgY29uZmlybUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2ZW50KSA9PiB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsgLy8gV2UgZG9uJ3Qgd2FudCB0byBzdWJtaXQgdGhpcyBmYWtlIGZvcm1cbiAgICBsZXQgZGF0YSA9IFtdO1xuXG4gICAgZm9yIChjb25zdCBlbGVtZW50IG9mIGlucHV0RWxlbWVudHMpIHtcbiAgICAgIGlmIChlbGVtZW50LnR5cGUgPT0gXCJyYWRpb1wiKSB7XG4gICAgICAgIGlmIChlbGVtZW50LmNoZWNrZWQpIHtcbiAgICAgICAgICBkYXRhLnB1c2goYCR7ZWxlbWVudC5uYW1lfTogJHtlbGVtZW50LnZhbHVlfWApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBkYXRhLnB1c2goYCR7ZWxlbWVudC5uYW1lfTogJHtlbGVtZW50LnZhbHVlfWApO1xuICAgIH1cblxuICAgIGVkaXRUb2RvRGlhbG9nLmNsb3NlKGRhdGEuam9pbihcIiwgXCIpKTtcbiAgfSk7XG59O1xuIiwiaW1wb3J0IHsgbG9hZFRvZG9zIH0gZnJvbSBcIi4vbG9hZFRvZG9zXCI7XG5pbXBvcnQgeyBlZGl0VG9kb3MgfSBmcm9tIFwiLi9lZGl0X3RvZG9zXCI7XG5leHBvcnQgY29uc3QgdG9kb0RvbUNyZWF0aW9uID0gZnVuY3Rpb24gKHRvZG8sIHByb2plY3QpIHtcbiAgY29uc3QgdG9kb3NDb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi50b2Rvc1wiKTtcbiAgY29uc3QgdG9kb0l0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICB0b2RvSXRlbS5jbGFzc0xpc3QuYWRkKFwidG9kb1wiKTtcblxuICAvLyAgIENyZWF0ZSB0aGUgY2hlY2tib3ggZWxlbWVudFxuICBjb25zdCBjaGVja2JveENvbnRlbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBjaGVja2JveENvbnRlbnQuY2xhc3NMaXN0LmFkZChcImNoZWNrYm94XCIpO1xuICBjb25zdCBjaGVja2JveEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gIGNoZWNrYm94RWxlbWVudC50eXBlID0gXCJjaGVja2JveFwiO1xuICBjaGVja2JveENvbnRlbnQuYXBwZW5kQ2hpbGQoY2hlY2tib3hFbGVtZW50KTtcbiAgdG9kb0l0ZW0uYXBwZW5kQ2hpbGQoY2hlY2tib3hDb250ZW50KTtcblxuICAvLyAgIENyZWF0ZSB0aGUgdG9kb1RleHRDb250ZW50XG4gIGNvbnN0IHRvZG9UZXh0Q29udGVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIHRvZG9UZXh0Q29udGVudC5jbGFzc0xpc3QuYWRkKFwidG9kby10ZXh0LWNvbnRlbnRcIik7XG5cbiAgLy8gICBDcmVhdGUgdGl0bGVcbiAgY29uc3QgdGl0bGVFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImgyXCIpO1xuICB0aXRsZUVsZW1lbnQudGV4dENvbnRlbnQgPSB0b2RvLnRpdGxlO1xuICB0b2RvVGV4dENvbnRlbnQuYXBwZW5kQ2hpbGQodGl0bGVFbGVtZW50KTtcblxuICAvLyAgIENyZWF0ZSBkZXNjcmlwdGlvblxuICBjb25zdCBkZXNjcmlwdGlvbkVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgZGVzY3JpcHRpb25FbGVtZW50LnRleHRDb250ZW50ID0gdG9kby5kZXNjcmlwdGlvbjtcbiAgdG9kb1RleHRDb250ZW50LmFwcGVuZENoaWxkKGRlc2NyaXB0aW9uRWxlbWVudCk7XG5cbiAgLy8gQ3JlYXRlIER1ZSBEYXRlXG4gIGNvbnN0IGR1ZURhdGVFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gIGR1ZURhdGVFbGVtZW50LnRleHRDb250ZW50ID0gYER1ZSBkYXRlOiAke3RvZG8uZHVlRGF0ZX1gO1xuICB0b2RvVGV4dENvbnRlbnQuYXBwZW5kQ2hpbGQoZHVlRGF0ZUVsZW1lbnQpO1xuXG4gIC8vICAgQ3JlYXRlIHByaW9yaXR5IEVMZW1lbnRcbiAgY29uc3QgcHJpb3JpdHlFbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gIHByaW9yaXR5RWxlbWVudC50ZXh0Q29udGVudCA9IGBQcmlvcml0eTogJHt0b2RvLnByaW9yaXR5fWA7XG4gIHRvZG9UZXh0Q29udGVudC5hcHBlbmRDaGlsZChwcmlvcml0eUVsZW1lbnQpO1xuXG4gIC8vICAgQ3JlYXRlIG5vdGVFTGVtZW50XG4gIGNvbnN0IG5vdGVFTGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gIG5vdGVFTGVtZW50LnRleHRDb250ZW50ID0gYE5vdGU6ICR7dG9kby5ub3RlfWA7XG4gIHRvZG9UZXh0Q29udGVudC5hcHBlbmRDaGlsZChub3RlRUxlbWVudCk7XG5cbiAgdG9kb0l0ZW0uYXBwZW5kQ2hpbGQodG9kb1RleHRDb250ZW50KTtcblxuICAvLyAgIENyZWF0ZSBFZGl0IGFuZCBEZWxldGUgYnV0dG9uc1xuICBjb25zdCBidXR0b25zRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGJ1dHRvbnNFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJidXR0b25zXCIpO1xuXG4gIC8vICAgQ3JlYXRlIGVkaXRCdXR0b25cbiAgY29uc3QgZWRpdEJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gIGVkaXRCdXR0b24udGV4dENvbnRlbnQgPSBcIkVkaXRcIjtcbiAgZWRpdEJ1dHRvbi5jbGFzc0xpc3QuYWRkKFwiZWRpdC1idG5cIik7XG4gIGVkaXRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBlZGl0VG9kb3ModG9kbywgcHJvamVjdCk7XG4gIH0pO1xuICBidXR0b25zRWxlbWVudC5hcHBlbmRDaGlsZChlZGl0QnV0dG9uKTtcblxuICAvLyAgIENyZWF0ZSBkZWxldGUgYnV0dG9uc1xuICBjb25zdCBkZWxldGVCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICBkZWxldGVCdXR0b24uaWQgPSB0b2RvLmlkO1xuICBkZWxldGVCdXR0b24udGV4dENvbnRlbnQgPSBcIkRlbGV0ZVwiO1xuICBkZWxldGVCdXR0b24uY2xhc3NMaXN0LmFkZChcImRlbGV0ZS1idG5cIik7XG4gIGRlbGV0ZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIC8vIFJlbW92ZSB0aGUgdG9kbyBJdGVtIGZyb20gdGhlIGNvcnJlc3BvbmRlZCB0b2RvIGluIHByb2plY3QncyB0b2RvTGlzdFxuICAgIHByb2plY3QudG9kb0xpc3QgPSBwcm9qZWN0LnRvZG9MaXN0LmZpbHRlcihcbiAgICAgIChpdGVtKSA9PiBpdGVtLmlkICE9IGRlbGV0ZUJ1dHRvbi5pZFxuICAgICk7XG4gICAgbG9hZFRvZG9zKHByb2plY3QpO1xuICB9KTtcbiAgYnV0dG9uc0VsZW1lbnQuYXBwZW5kQ2hpbGQoZGVsZXRlQnV0dG9uKTtcblxuICB0b2RvSXRlbS5hcHBlbmRDaGlsZChidXR0b25zRWxlbWVudCk7XG5cbiAgdG9kb3NDb250ZW50LmFwcGVuZENoaWxkKHRvZG9JdGVtKTtcbn07XG4iLCJpbXBvcnQgeyB0b2RvRG9tQ3JlYXRpb24gfSBmcm9tIFwiLi90b2RvRG9tQ3JlYXRpb25cIjtcblxuZXhwb3J0IGNvbnN0IGxvYWRUb2RvcyA9IGZ1bmN0aW9uIChwcm9qZWN0KSB7XG4gIGNvbnN0IHRvZG9zQ29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIudG9kb3NcIik7XG4gIHRvZG9zQ29udGVudC50ZXh0Q29udGVudCA9IFwiXCI7XG4gIGZvciAoY29uc3QgdG9kbyBvZiBwcm9qZWN0LnRvZG9MaXN0KSB7XG4gICAgdG9kb0RvbUNyZWF0aW9uKHRvZG8sIHByb2plY3QpO1xuICB9XG59O1xuIiwiZXhwb3J0IGNsYXNzIFByb2plY3Qge1xuICBzdGF0aWMgaWRDb3VudGVyID0gMDtcbiAgY29uc3RydWN0b3IobmFtZSkge1xuICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgdGhpcy5pZCA9ICsrUHJvamVjdC5pZENvdW50ZXI7XG4gICAgdGhpcy50b2RvTGlzdCA9IFtcbiAgICAgIHtcbiAgICAgICAgaWQ6IDEsXG4gICAgICAgIHRpdGxlOiBcIlRvZG9cIixcbiAgICAgICAgZGVzY3JpcHRpb246IFwiVGhpcyBpcyBhIGRlc2NyaXB0aW9uXCIsXG4gICAgICAgIGR1ZURhdGU6IFwiMjAyNC0wMy0wNFwiLFxuICAgICAgICBwcmlvcml0eTogXCJIaWdodFwiLFxuICAgICAgICBub3RlOiBcIlRoaXMgaXMgYSBzbWFsbCBub3RlIGZvciB0aGUgdG9kb1wiLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaWQ6IDIsXG4gICAgICAgIHRpdGxlOiBcIlRvZG9cIixcbiAgICAgICAgZGVzY3JpcHRpb246IFwiVGhpcyBpcyBhIGRlc2NyaXB0aW9uXCIsXG4gICAgICAgIGR1ZURhdGU6IFwiMjAyNC0wMy0wNFwiLFxuICAgICAgICBwcmlvcml0eTogXCJIaWdodFwiLFxuICAgICAgICBub3RlOiBcIlRoaXMgaXMgYSBzbWFsbCBub3RlIGZvciB0aGUgdG9kb1wiLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaWQ6IDMsXG4gICAgICAgIHRpdGxlOiBcIlRvZG9cIixcbiAgICAgICAgZGVzY3JpcHRpb246IFwiVGhpcyBpcyBhIGRlc2NyaXB0aW9uXCIsXG4gICAgICAgIGR1ZURhdGU6IFwiMjAyNC0wMy0wNFwiLFxuICAgICAgICBwcmlvcml0eTogXCJIaWdodFwiLFxuICAgICAgICBub3RlOiBcIlRoaXMgaXMgYSBzbWFsbCBub3RlIGZvciB0aGUgdG9kb1wiLFxuICAgICAgfSxcbiAgICBdO1xuICB9XG59XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJleHBvcnQgY2xhc3MgVG9kbyB7XG4gIHN0YXRpYyB0b2RvSUQgPSAwO1xuICBjb25zdHJ1Y3Rvcih0aXRsZSwgZGVzY3JpcHRpb24sIGR1ZURhdGUsIHByaW9yaXR5LCBub3RlLCBwcm9qZWN0SUQpIHtcbiAgICB0aGlzLmlkID0gKytUb2RvLnRvZG9JRDtcbiAgICB0aGlzLnRpdGxlID0gdGl0bGU7XG4gICAgdGhpcy5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uO1xuICAgIHRoaXMuZHVlRGF0ZSA9IGR1ZURhdGU7XG4gICAgdGhpcy5wcmlvcml0eSA9IHByaW9yaXR5O1xuICAgIHRoaXMubm90ZSA9IG5vdGU7XG4gICAgdGhpcy5wcm9qZWN0SUQgPSBwcm9qZWN0SUQ7XG4gIH1cbn1cbiIsImltcG9ydCB7IGVkaXRQcm9qZWN0TmFtZSB9IGZyb20gXCIuL2VkaXRfcHJvamVjdFwiO1xuaW1wb3J0IHsgbG9hZFRvZG9zIH0gZnJvbSBcIi4vbG9hZFRvZG9zXCI7XG5pbXBvcnQgeyBQcm9qZWN0IH0gZnJvbSBcIi4vcHJvamVjdFwiO1xuZXhwb3J0IGNvbnN0IGhhbmRsZVByb2plY3RDcmVhdGlvbiA9IGZ1bmN0aW9uICgpIHtcbiAgY29uc3Qgc2hvd0J1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2hvd0RpYWxvZ1wiKTtcbiAgY29uc3QgZmF2RGlhbG9nID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmYXZEaWFsb2dcIik7XG4gIGNvbnN0IGlucHV0RWwgPSBmYXZEaWFsb2cucXVlcnlTZWxlY3RvcihcIiNuZXctcHJvamVjdFwiKTtcbiAgY29uc3QgY29uZmlybUJ0biA9IGZhdkRpYWxvZy5xdWVyeVNlbGVjdG9yKFwiI2NvbmZpcm1CdG5cIik7XG4gIFxuXG4gIC8vIFwiU2hvdyB0aGUgZGlhbG9nXCIgYnV0dG9uIG9wZW5zIHRoZSA8ZGlhbG9nPiBtb2RhbGx5XG4gIHNob3dCdXR0b24uY2xhc3NMaXN0LmFkZChcImhlbGxvXCIpO1xuICBzaG93QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgZmF2RGlhbG9nLnNob3dNb2RhbCgpO1xuICB9KTtcblxuICBpbnB1dEVsLmFkZEV2ZW50TGlzdGVuZXIoXCJjaGFuZ2VcIiwgKGUpID0+IHtcbiAgICBjb25maXJtQnRuLnZhbHVlID0gaW5wdXRFbC52YWx1ZTtcbiAgfSk7XG5cbiAgZmF2RGlhbG9nLmFkZEV2ZW50TGlzdGVuZXIoXCJjbG9zZVwiLCAoZSkgPT4ge1xuICAgIGNyZWF0ZVByb2plY3QoZmF2RGlhbG9nLnJldHVyblZhbHVlKTtcbiAgfSk7XG5cbiAgY29uZmlybUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2ZW50KSA9PiB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBmYXZEaWFsb2cuY2xvc2UoaW5wdXRFbC52YWx1ZSk7XG4gIH0pO1xufTtcblxuZnVuY3Rpb24gY3JlYXRlUHJvamVjdChuYW1lKSB7XG4gIGNvbnN0IG5ld1Byb2plY3QgPSBuZXcgUHJvamVjdChuYW1lKTtcbiAgYWRkUHJvamVjdFRvRE9NKG5ld1Byb2plY3QpO1xufVxuXG5mdW5jdGlvbiBhZGRQcm9qZWN0VG9ET00ocHJvamVjdCkge1xuICBjb25zdCBvdXRwdXRCb3ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwib3V0cHV0XCIpO1xuICBjb25zdCBwcm9qZWN0Tm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIHByb2plY3ROb2RlLmNsYXNzTGlzdC5hZGQoXCJwcm9qZWN0XCIpO1xuICBwcm9qZWN0Tm9kZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIGxvYWRUb2Rvcyhwcm9qZWN0KTtcbiAgfSk7XG4gIHByb2plY3ROb2RlLmlubmVySFRNTCA9IGA8aDM+JHtwcm9qZWN0Lm5hbWV9PC9oMz5gO1xuXG4gIGNvbnN0IGVkaXRQcm9qZWN0QnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgZWRpdFByb2plY3RCdXR0b24udGV4dENvbnRlbnQgPSBcIkVkaXRcIjtcbiAgZWRpdFByb2plY3RCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBlZGl0UHJvamVjdE5hbWUocHJvamVjdCwgcHJvamVjdE5vZGUpO1xuICB9KTtcbiAgcHJvamVjdE5vZGUuYXBwZW5kQ2hpbGQoZWRpdFByb2plY3RCdXR0b24pO1xuXG4gIGNvbnN0IGRlbGV0ZVByb2plY3RCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICBkZWxldGVQcm9qZWN0QnV0dG9uLnRleHRDb250ZW50ID0gXCJEZWxldGVcIjtcbiAgZGVsZXRlUHJvamVjdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIGRlbGV0ZVByb2plY3QocHJvamVjdE5vZGUpO1xuICB9KTtcbiAgcHJvamVjdE5vZGUuYXBwZW5kQ2hpbGQoZGVsZXRlUHJvamVjdEJ1dHRvbik7XG5cbiAgb3V0cHV0Qm94LmFwcGVuZENoaWxkKHByb2plY3ROb2RlKTtcbn1cblxuZnVuY3Rpb24gZGVsZXRlUHJvamVjdChwcm9qZWN0Tm9kZSkge1xuICBwcm9qZWN0Tm9kZS5yZW1vdmUoKTtcbn1cbiIsImV4cG9ydCBmdW5jdGlvbiBlZGl0UHJvamVjdE5hbWUocHJvamVjdCwgcHJvamVjdE5vZGUpIHtcbiAgY29uc3QgZWRpdERpYWxvZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZWRpdERpYWxvZ1wiKTtcbiAgY29uc3QgaW5wdXRFbCA9IGVkaXREaWFsb2cucXVlcnlTZWxlY3RvcihcIiNlZGl0LXByb2plY3RcIik7XG4gIGNvbnN0IGNvbmZpcm1CdG5FZGl0ID0gZWRpdERpYWxvZy5xdWVyeVNlbGVjdG9yKFwiI2NvbmZpcm1CdG5FZGl0XCIpO1xuXG4gIGlucHV0RWwudmFsdWUgPSBwcm9qZWN0Lm5hbWU7XG4gIGVkaXREaWFsb2cuc2hvd01vZGFsKCk7XG4gIGlucHV0RWwuYWRkRXZlbnRMaXN0ZW5lcihcImNoYW5nZVwiLCAoKSA9PiB7XG4gICAgY29uZmlybUJ0bkVkaXQudmFsdWUgPSBpbnB1dEVsLnZhbHVlO1xuICB9KTtcblxuICBlZGl0RGlhbG9nLmFkZEV2ZW50TGlzdGVuZXIoXCJjbG9zZVwiLCAoKSA9PiB7XG4gICAgaWYgKGVkaXREaWFsb2cucmV0dXJuVmFsdWUgIT0gXCJjYW5jZWxcIikge1xuICAgICAgcHJvamVjdC5uYW1lID0gZWRpdERpYWxvZy5yZXR1cm5WYWx1ZTtcbiAgICAgIHByb2plY3ROb2RlLnF1ZXJ5U2VsZWN0b3IoXCJoM1wiKS50ZXh0Q29udGVudCA9IGVkaXREaWFsb2cucmV0dXJuVmFsdWU7XG4gICAgICBjb25zb2xlLmxvZyhwcm9qZWN0Lm5hbWUpO1xuICAgIH1cbiAgfSk7XG5cbiAgY29uZmlybUJ0bkVkaXQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldmVudCkgPT4ge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgZWRpdERpYWxvZy5jbG9zZShpbnB1dEVsLnZhbHVlKTtcbiAgfSk7XG59XG4iLCJpbXBvcnQgeyBoYW5kbGVQcm9qZWN0Q3JlYXRpb24gfSBmcm9tIFwiLi9wcm9qZWN0X2NyZWF0aW9uXCI7XG5pbXBvcnQgXCIuL3N0eWxlLmNzc1wiO1xuaW1wb3J0IHsgaGFuZGxlVG9kb0NyZWF0aW9uIH0gZnJvbSBcIi4vdG9kb3NDcmVhdGlvblwiO1xuaGFuZGxlUHJvamVjdENyZWF0aW9uKCk7XG5oYW5kbGVUb2RvQ3JlYXRpb24oKTtcbiIsImltcG9ydCB7IFRvZG8gfSBmcm9tIFwiLi90b2RvXCI7XG5cbmV4cG9ydCBjb25zdCBoYW5kbGVUb2RvQ3JlYXRpb24gPSBmdW5jdGlvbiAoKSB7XG4gIGNvbnN0IHNob3dUb2RvRGlhbG9nID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNzaG93VG9kb0RpYWxvZ1wiKTtcbiAgY29uc3QgdG9kb0RpYWxvZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjdG9kb0RpYWxvZ1wiKTtcbiAgY29uc3QgY29uZmlybUJ0biA9IHRvZG9EaWFsb2cucXVlcnlTZWxlY3RvcihcIiNjb25maXJtQnRuXCIpO1xuXG4gIGNvbnN0IGxpc3RPZlRvZG8gPSBbXG4gICAge1xuICAgICAgdGl0bGU6IFwiVG9kb1wiLFxuICAgICAgZGVzY3JpcHRpb246IFwiVGhpcyBpcyBhIGRlc2NyaXB0aW9uXCIsXG4gICAgICBkdWVEYXRlOiBcIjIwMjQtMDMtMDRcIixcbiAgICAgIHByaW9yaXR5OiBcIkhpZ2h0XCIsXG4gICAgICBub3RlOiBcIlRoaXMgaXMgYSBzbWFsbCBub3RlIGZvciB0aGUgdG9kb1wiLFxuICAgIH0sXG4gIF07XG5cbiAgY29uc3QgaW5wdXRFbGVtZW50cyA9IHRvZG9EaWFsb2cuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImlucHV0XCIpO1xuXG4gIHNob3dUb2RvRGlhbG9nLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgdG9kb0RpYWxvZy5zaG93TW9kYWwoKTtcbiAgfSk7XG5cbiAgLy8gXCJDYW5jZWxcIiBidXR0b24gY2xvc2VzIHRoZSBkaWFsb2cgd2l0aG91dCBzdWJtaXR0aW5nIGJlY2F1c2Ugb2YgW2Zvcm0gbWV0aG9kPVwiZGlhbG9nXCJdLCB0cmlnZ2VyaW5nIGEgY2xvc2UgZXZlbnQuXG4gIHRvZG9EaWFsb2cuYWRkRXZlbnRMaXN0ZW5lcihcImNsb3NlXCIsIChlKSA9PiB7XG4gICAgbGV0IG5ld1RvZG9EYXRhO1xuICAgIGlmICh0b2RvRGlhbG9nLnJldHVyblZhbHVlICE9IFwiY2FuY2VsXCIpIHtcbiAgICAgIG5ld1RvZG9EYXRhID0gdG9kb0RpYWxvZy5yZXR1cm5WYWx1ZVxuICAgICAgICAuc3BsaXQoXCIsIFwiKVxuICAgICAgICAucmVkdWNlKChhY2MsIGN1cnJlbnRWYWx1ZSkgPT4ge1xuICAgICAgICAgIGNvbnN0IFtrZXksIHZhbHVlXSA9IGN1cnJlbnRWYWx1ZS5zcGxpdChcIjogXCIpO1xuICAgICAgICAgIGFjY1trZXkudHJpbSgpXSA9IGlzTmFOKHZhbHVlKSA/IHZhbHVlIDogcGFyc2VJbnQodmFsdWUpO1xuICAgICAgICAgIHJldHVybiBhY2M7XG4gICAgICAgIH0sIHt9KTtcbiAgICB9XG4gICAgY29uc29sZS5sb2coY3JlYXRlVG9kbyhuZXdUb2RvRGF0YSkpO1xuICB9KTtcblxuICBjb25maXJtQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZlbnQpID0+IHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOyAvLyBXZSBkb24ndCB3YW50IHRvIHN1Ym1pdCB0aGlzIGZha2UgZm9ybVxuICAgIGxldCBkYXRhID0gW107XG5cbiAgICBmb3IgKGNvbnN0IGVsZW1lbnQgb2YgaW5wdXRFbGVtZW50cykge1xuICAgICAgaWYgKGVsZW1lbnQudHlwZSA9PSBcInJhZGlvXCIpIHtcbiAgICAgICAgaWYgKGVsZW1lbnQuY2hlY2tlZCkge1xuICAgICAgICAgIGRhdGEucHVzaChgJHtlbGVtZW50Lm5hbWV9OiAke2VsZW1lbnQudmFsdWV9YCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGRhdGEucHVzaChgJHtlbGVtZW50Lm5hbWV9OiAke2VsZW1lbnQudmFsdWV9YCk7XG4gICAgfVxuXG4gICAgdG9kb0RpYWxvZy5jbG9zZShkYXRhLmpvaW4oXCIsIFwiKSk7XG4gIH0pO1xufTtcblxuZnVuY3Rpb24gY3JlYXRlVG9kbyhkYXRhKSB7XG4gIGNvbnN0IHRvZG8gPSBuZXcgVG9kbyhcbiAgICBkYXRhLnRpdGxlLFxuICAgIGRhdGEuZGVzY3JpcHRpb24sXG4gICAgZGF0YS5kdWVfZGF0ZSxcbiAgICBkYXRhLnByaW9yaXR5LFxuICAgIGRhdGEubm90ZVxuICApO1xuICByZXR1cm4gdG9kbztcbn1cbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJuIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwibmMiLCJ0b2RvRG9tQ3JlYXRpb24iLCJ0b2RvIiwicHJvamVjdCIsInRvZG9zQ29udGVudCIsInRvZG9JdGVtIiwiY2xhc3NMaXN0IiwiYWRkIiwiY2hlY2tib3hDb250ZW50IiwiY2hlY2tib3hFbGVtZW50IiwidHlwZSIsInRvZG9UZXh0Q29udGVudCIsInRpdGxlRWxlbWVudCIsInRleHRDb250ZW50IiwidGl0bGUiLCJkZXNjcmlwdGlvbkVsZW1lbnQiLCJkZXNjcmlwdGlvbiIsImR1ZURhdGVFbGVtZW50IiwiZHVlRGF0ZSIsInByaW9yaXR5RWxlbWVudCIsInByaW9yaXR5Iiwibm90ZUVMZW1lbnQiLCJub3RlIiwiYnV0dG9uc0VsZW1lbnQiLCJlZGl0QnV0dG9uIiwiYWRkRXZlbnRMaXN0ZW5lciIsImVkaXRUb2RvRGlhbG9nIiwiZ2V0RWxlbWVudEJ5SWQiLCJpbnB1dEVsZW1lbnRzIiwicXVlcnlTZWxlY3RvckFsbCIsImNvbmZpcm1CdG4iLCJ2YWx1ZSIsInRvZG9Qcmlvcml0eUlucHV0cyIsIml0ZXJhdG9yIiwidG9Mb3dlckNhc2UiLCJjaGVja2VkIiwic2hvd01vZGFsIiwidG9kb1VwZGF0ZWREYXRhIiwicmV0dXJuVmFsdWUiLCJzcGxpdCIsInJlZHVjZSIsImFjYyIsImN1cnJlbnRWYWx1ZSIsInRyaW0iLCJpc05hTiIsInBhcnNlSW50IiwiY29uc29sZSIsImxvZyIsImR1ZV9kYXRlIiwibG9hZFRvZG9zIiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsIm5hbWUiLCJjbG9zZSIsImVkaXRUb2RvcyIsImRlbGV0ZUJ1dHRvbiIsInRvZG9MaXN0IiwiZmlsdGVyIiwiUHJvamVjdCIsInN0YXRpYyIsImNvbnN0cnVjdG9yIiwiaWRDb3VudGVyIiwibG9jYWxzIiwiVG9kbyIsInByb2plY3RJRCIsInRvZG9JRCIsInNob3dCdXR0b24iLCJmYXZEaWFsb2ciLCJpbnB1dEVsIiwib3V0cHV0Qm94IiwicHJvamVjdE5vZGUiLCJpbm5lckhUTUwiLCJlZGl0UHJvamVjdEJ1dHRvbiIsImVkaXREaWFsb2ciLCJjb25maXJtQnRuRWRpdCIsImVkaXRQcm9qZWN0TmFtZSIsImRlbGV0ZVByb2plY3RCdXR0b24iLCJkZWxldGVQcm9qZWN0IiwiYWRkUHJvamVjdFRvRE9NIiwiaGFuZGxlUHJvamVjdENyZWF0aW9uIiwic2hvd1RvZG9EaWFsb2ciLCJ0b2RvRGlhbG9nIiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsIm5ld1RvZG9EYXRhIiwiaGFuZGxlVG9kb0NyZWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==